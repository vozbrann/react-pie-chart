{"version":3,"sources":["components/PieChart.jsx","components/StyledH1.js","components/pages/ChartPage.jsx","components/StyledButton.js","components/FormItem.jsx","utils/getRandomColor.js","components/pages/FormPage.jsx","components/SideMenu.jsx","App.jsx","index.js"],"names":["Chart","styled","svg","Slice","path","SliceContainer","g","Container","div","PieChart","formattedData","data","map","el","qt","parseFloat","total","reduce","a","b","getCoordinatesForPercent","percent","Math","cos","PI","sin","cumulativePercent","viewBox","slice","i","startX","startY","middlePercent","textX","textY","endX","endY","largeArcFlag","pathData","join","leftFlag","textAnchor","key","className","strokeOpacity","strokeLinecap","points","strokeWidth","stroke","color","d","fill","dominantBaseline","x","y","style","fontSize","title","toFixed","h1","ChartPage","items","StyledH1","button","props","danger","Input","input","Form","form","FormGroup","w","Counter","p","FormItem","item","editItem","deleteItem","id","onChange","e","target","name","value","handleFocus","event","select","onFocus","type","step","StyledButton","onClick","c","r","floor","random","rgb","FormPage","setItems","findIndex","newItems","filter","Date","getTime","getRandomColor","StyledNavLink","NavLink","SideMenu","exact","to","GlobalStyle","createGlobalStyle","Layout","Content","cItems","push","App","useState","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"s0BAGA,IAAMA,EAAQC,IAAOC,IAAV,KAILC,EAAQF,IAAOG,KAAV,KAQLC,EAAiBJ,IAAOK,EAAV,KAadC,EAAYN,IAAOO,IAAV,KAwEAC,EAnEE,SAAC,GAAY,IACtBC,EADqB,EAAVC,KACUC,KAAI,SAAAC,GAAE,kCAASA,GAAT,IAAaC,GAAIC,WAAWF,EAAGC,SAE1DE,EAAQN,EAAcO,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,EAAEL,KAAI,GAEjDM,EAA2B,SAACC,GAGhC,MAAO,CAFGC,KAAKC,IAAI,EAAID,KAAKE,GAAKH,GACvBC,KAAKG,IAAI,EAAIH,KAAKE,GAAKH,KAI/BK,EAAoB,EAExB,OACE,kBAACnB,EAAD,KACE,kBAACP,EAAD,CAAO2B,QAAQ,mBAEXjB,EAAcE,KAAI,SAACgB,EAAOC,GAAM,MAELT,EACvBM,GAH4B,mBAEvBI,EAFuB,KAEfC,EAFe,KAKxBC,EAAgBN,EAAqBE,EAAMd,GAAKE,EAAS,EALjC,EAQPI,EAAyBY,GARlB,mBAQvBC,EARuB,KAQhBC,EARgB,KAW9BR,GAAqBE,EAAMd,GAAKE,EAXF,MAaTI,EAAyBM,GAbhB,mBAavBS,EAbuB,KAajBC,EAbiB,KAgBxBC,EAAeT,EAAMd,GAAKE,EAAQ,GAAK,EAAI,EAG3CsB,EAAW,CAAC,KAAD,OACVR,EADU,YACAC,GADA,kBAEJM,EAFI,cAEcF,EAFd,YAEsBC,GAFtB,SAIfG,KAAK,KAEHC,IAAaR,EAAgB,KAAQA,EAAgB,KACrDS,EAAaD,EAAW,MAAQ,QAEpC,OACE,kBAACnC,EAAD,CAAgBqC,IAAKb,EAAGc,UAAW,IACjC,8BAAUC,cAAc,IAAIC,cAAc,QAAQC,OAChDN,EAAQ,cACS,IAARP,EADD,YACwB,IAARC,EADhB,YACuC,IAARD,EAAc,IAD7C,YAC6D,IAARC,EADrD,YAC4E,IAARD,EADpE,YAC2F,IAARC,GADnF,cAES,IAARD,EAFD,YAEwB,IAARC,EAFhB,YAEuC,IAARD,EAAc,IAF7C,YAE6D,IAARC,EAFrD,YAE4E,IAARD,EAFpE,YAE2F,IAARC,GAC3Fa,YAAa,IAAMC,OAAQpB,EAAMqB,QACnC,kBAAC9C,EAAD,CAAO+C,EAAGZ,EAAUa,KAAMvB,EAAMqB,QAChC,0BAAME,KAAMvB,EAAMqB,MAAOR,WAAYA,EAAYW,iBAAiB,SAC5DC,EAAGb,EAAmB,IAARP,EAAc,GAAc,IAARA,EAAc,GAChDqB,EAAW,IAARpB,EACHqB,MAAO,CAACC,SAAU,SAAW5B,EAAM6B,MAHzC,KAGkD7B,EAAMd,GAHxD,MAG+Dc,EAAMd,GAAKE,EAAQ,KAAK0C,QAAQ,GAH/F,a,sHCpFDzD,UAAO0D,GAAtB,KCWeC,EATG,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAClB,OACE,6BACE,kBAACC,EAAD,cACA,kBAAC,EAAD,CAAUnD,KAAMkD,M,+TCNP5D,UAAO8D,OAAtB,KAEsB,SAAAC,GAAK,OAAIA,EAAMC,OAAS,UAAY,gB,ksBCA1D,IAAMC,EAAQjE,IAAOkE,MAAV,KAMLC,EAAOnE,IAAOoE,KAAV,KAKJC,EAAYrE,IAAOO,IAAV,KACF,SAAAwD,GAAK,OAAIA,EAAMO,KAWtBC,EAAUvE,IAAOwE,EAAV,KAoCEC,EA5BE,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,KAAM9C,EAA6B,EAA7BA,EAAG+C,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,WAC7BC,EAAiBH,EAAjBG,GAAIrB,EAAakB,EAAblB,MAAO3C,EAAM6D,EAAN7D,GACZiE,EAAW,SAACC,GAChBJ,EAAS,2BAAID,GAAL,kBAAYK,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAKzCC,EAAc,SAACC,GAAD,OAAWA,EAAMJ,OAAOK,UAC5C,OACE,kBAAClB,EAAD,KACE,kBAACI,EAAD,eAAY3C,EAAI,GAChB,kBAACyC,EAAD,CAAWC,EAAE,QACX,oCACA,kBAACL,EAAD,CAAOqB,QAASH,EAAaL,SAAUA,EAAUG,KAAM,QAASM,KAAK,OAAOL,MAAO1B,KAErF,kBAACa,EAAD,CAAWC,EAAE,QACX,uCACA,kBAACL,EAAD,CAAOqB,QAASH,EAAaL,SAAUA,EAAUG,KAAM,KAAMM,KAAK,SAASC,KAAK,MACzEN,MAAOrE,KAEhB,kBAACwD,EAAD,KACE,kBAACoB,EAAD,CAAczB,QAAM,EAAC0B,QAjBV,WACfd,EAAWC,KAgBP,aCzDO,aACb,IAAIc,EAAI,CACNC,EAAGvE,KAAKwE,MAAM,GACdxF,EAAGgB,KAAKwE,MAAM,IAAkB,IAAdxE,KAAKyE,UACvB5E,EAAGG,KAAKwE,MAAM,IAAkB,IAAdxE,KAAKyE,WAGzB,OADAH,EAAEI,IAAM,OAAOJ,EAAEC,EAAE,IAAID,EAAEtF,EAAE,IAAIsF,EAAEzE,EAAE,IAC5ByE,EAAEI,KC6BIC,EA9BE,SAAC,GAAuB,IAAtBpC,EAAqB,EAArBA,MAAOqC,EAAc,EAAdA,SAMlBtB,EAAW,SAACD,GAChB,IAAI9C,EAAIgC,EAAMsC,WAAW,SAAAjF,GAAC,OAAIA,EAAE4D,KAAOH,EAAKG,MACxCsB,EAAQ,YAAOvC,GACnBuC,EAASvE,GAAK8C,EACduB,EAASE,IAGLvB,EAAa,SAACC,GAClBoB,EAASrC,EAAMwC,QAAO,SAAAxF,GAAE,OAAIA,EAAGiE,KAAOA,OAGxC,OACE,6BACE,kBAAChB,EAAD,aACCD,EAAMjD,KAAI,SAAC+D,EAAM9C,GAChB,OACE,kBAAC,EAAD,CAAUA,EAAGA,EAAG8C,KAAMA,EAAMjC,IAAKiC,EAAKG,GAAID,WAAYA,EAAYD,SAAUA,OAGhF,kBAACc,EAAD,CAAcC,QAvBG,WACnBO,EAAS,GAAD,mBAAKrC,GAAL,CAAY,CAACiB,IAAI,IAAIwB,MAAOC,UAAW9C,MAAO,WAAY3C,GAAG,EAAGmC,MAAMuD,UAsB5E,gB,8ZC3BN,IAAMC,EAAgBxG,YAAOyG,IAAPzG,CAAH,KA8BJ0G,EATE,WACf,OACE,6BACE,kBAACF,EAAD,CAAeG,OAAK,EAACC,GAAG,KAAxB,QACA,kBAACJ,EAAD,CAAeG,OAAK,EAACC,GAAG,UAAxB,W,2cCGN,IApBA,IAAMC,EAAcC,YAAH,KAUXC,EAAS/G,IAAOO,IAAV,KAGNyG,EAAUhH,IAAOO,IAAV,KAMT0G,EAAS,GACJrF,EAAI,EAAGA,EAAI,EAAGA,IACrBqF,EAAOC,KAAK,CAACrC,GAAIjD,EAAGf,IAAmB,EAAdQ,KAAKyE,UAAYrC,QAAQ,GAAID,MAAO5B,EAAE,EAAE,QAASoB,MAAOuD,MA0BpEY,MAvBf,WAAgB,IAAD,EACaC,mBAASH,GADtB,mBACNrD,EADM,KACCqC,EADD,KAGb,OACE,kBAAC,IAAD,CAAQoB,SAAS,KACf,kBAACR,EAAD,MACA,kBAACE,EAAD,KACE,kBAAC,EAAD,MACA,kBAACC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOL,OAAK,EAACxG,KAAK,UAChB,kBAAC,EAAD,CAAWyD,MAAOA,KAEpB,kBAAC,IAAD,CAAO+C,OAAK,EAACxG,KAAK,KAChB,kBAAC,EAAD,CAAUyD,MAAOA,EAAOqC,SAAUA,UC9ChDqB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5c3477f4.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Chart = styled.svg`\r\n  width: 100%;\r\n`;\r\n\r\nconst Slice = styled.path`\r\n  transition: 0.3s;\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\n\r\nconst SliceContainer = styled.g`\r\n  text, polyline {\r\n    transition: 0.3s;\r\n    opacity: 0;\r\n    pointer-events: none;\r\n  }\r\n  &:hover {\r\n     text, polyline {\r\n      opacity: 1;\r\n     }\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst PieChart = ({data}) => {\r\n  const formattedData = data.map(el => ({...el, qt: parseFloat(el.qt)}));\r\n\r\n  const total = formattedData.reduce((a, b) => a + b.qt, 0);\r\n\r\n  const getCoordinatesForPercent = (percent) => {\r\n    const x = Math.cos(2 * Math.PI * percent);\r\n    const y = Math.sin(2 * Math.PI * percent);\r\n    return [x, y];\r\n  };\r\n\r\n  let cumulativePercent = 0;\r\n\r\n  return (\r\n    <Container>\r\n      <Chart viewBox=\"-4.5 -1.8 9 3.6\">\r\n        {\r\n          formattedData.map((slice, i) => {\r\n            // destructuring assignment sets the two variables at once\r\n            const [startX, startY] = getCoordinatesForPercent(\r\n              cumulativePercent);\r\n\r\n            const middlePercent = cumulativePercent + (slice.qt / total) / 2;\r\n\r\n            // calc text position\r\n            const [textX, textY] = getCoordinatesForPercent(middlePercent);\r\n\r\n            // each slice starts where the last slice ended, so keep a cumulative percent\r\n            cumulativePercent += slice.qt / total;\r\n\r\n            const [endX, endY] = getCoordinatesForPercent(cumulativePercent);\r\n\r\n            // if the slice is more than 50%, take the large arc (the long way around)\r\n            const largeArcFlag = slice.qt / total > .5 ? 1 : 0;\r\n\r\n            // create an array and join it just for code readability\r\n            const pathData = [\r\n              `M ${startX} ${startY}`, // Move\r\n              `A 1 1 0 ${largeArcFlag} 1 ${endX} ${endY}`, // Arc\r\n              `L 0 0`, // Line\r\n            ].join(' ');\r\n\r\n            let leftFlag = !(middlePercent < 0.25 || middlePercent > 0.75);\r\n            let textAnchor = leftFlag ? 'end' : 'start';\r\n\r\n            return (\r\n              <SliceContainer key={i} className={''}>\r\n                <polyline strokeOpacity=\"1\" strokeLinecap=\"round\" points={\r\n                  leftFlag ?\r\n                    `0,0 ${textX * 1.5},${textY * 1.5} ${textX * 1.5 - 0.15},${textY * 1.5} ${textX * 1.5},${textY * 1.5}` :\r\n                    `0,0 ${textX * 1.5},${textY * 1.5} ${textX * 1.5 + 0.15},${textY * 1.5} ${textX * 1.5},${textY * 1.5}`\r\n                } strokeWidth={0.01} stroke={slice.color} />\r\n                <Slice d={pathData} fill={slice.color}/>\r\n                <text fill={slice.color} textAnchor={textAnchor} dominantBaseline=\"middle\"\r\n                      x={leftFlag ? textX * 1.5 - 0.2 : textX * 1.5 + 0.2}\r\n                      y={textY * 1.5}\r\n                      style={{fontSize: '0.7%',}}>{slice.title}: {slice.qt} ({(slice.qt / total * 100).toFixed(2)}%)\r\n                </text>\r\n              </SliceContainer>\r\n            );\r\n          })\r\n        }\r\n      </Chart>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","import styled from 'styled-components';\r\n\r\nexport default styled.h1`\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n`;\r\n","import React from 'react';\r\nimport PieChart from '../PieChart';\r\nimport StyledH1 from '../StyledH1';\r\n\r\nconst ChartPage = ({items}) => {\r\n  return (\r\n    <div>\r\n      <StyledH1>Chart</StyledH1>\r\n      <PieChart data={items}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartPage;\r\n","import styled from 'styled-components';\r\n\r\nexport default styled.button`\r\n  flex: none;\r\n  background-color: ${props => props.danger ? \"#be0000\" : \"dodgerblue\"};;\r\n  border: none;\r\n  outline: none;\r\n  color: white;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  padding: 13px 20px;\r\n  cursor: pointer;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport StyledButton from './StyledButton';\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 12px 20px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n    width: ${props => props.w};\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    align-items: end;\r\n    margin-right: 20px;\r\n    p {\r\n      margin-bottom: 8px;\r\n    }\r\n`;\r\n\r\nconst Counter = styled.p`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    padding: 15px 0;\r\n    margin-right: 20px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst FormItem = ({item, i, editItem, deleteItem}) => {\r\n  const {id, title, qt} = item;\r\n  const onChange = (e) => {\r\n    editItem({...item, [e.target.name]: e.target.value});\r\n  };\r\n  const onDelete = () => {\r\n    deleteItem(id);\r\n  };\r\n  const handleFocus = (event) => event.target.select();\r\n  return (\r\n    <Form>\r\n      <Counter>№ {i + 1}</Counter>\r\n      <FormGroup w=\"100%\">\r\n        <p>Title</p>\r\n        <Input onFocus={handleFocus} onChange={onChange} name={'title'} type=\"text\" value={title}/>\r\n      </FormGroup>\r\n      <FormGroup w=\"100%\">\r\n        <p>Quantity</p>\r\n        <Input onFocus={handleFocus} onChange={onChange} name={'qt'} type=\"number\" step=\"any\"\r\n               value={qt}/>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <StyledButton danger onClick={onDelete}>Delete</StyledButton>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormItem;\r\n","export default () => {\r\n  let c = {\r\n    r: Math.floor(0),\r\n    g: Math.floor(130+Math.random()*100),\r\n    b: Math.floor(155+Math.random()*100)\r\n  };\r\n  c.rgb = 'rgb('+c.r+','+c.g+','+c.b+')';\r\n  return c.rgb;\r\n};\r\n","import React from 'react';\r\nimport FormItem from '../FormItem';\r\nimport getRandomColor from '../../utils/getRandomColor';\r\nimport StyledButton from '../StyledButton';\r\nimport StyledH1 from '../StyledH1';\r\n\r\nconst FormPage = ({items, setItems}) => {\r\n\r\n  const addEmptyItem = () => {\r\n    setItems([...items, {id: new Date().getTime(), title: \"New item\", qt:0, color:getRandomColor()}]);\r\n  };\r\n\r\n  const editItem = (item) => {\r\n    let i = items.findIndex((a => a.id === item.id));\r\n    let newItems = [...items];\r\n    newItems[i] = item;\r\n    setItems(newItems);\r\n  };\r\n\r\n  const deleteItem = (id) => {\r\n    setItems(items.filter(el => el.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <StyledH1>Form</StyledH1>\r\n      {items.map((item, i) => {\r\n        return (\r\n          <FormItem i={i} item={item} key={item.id} deleteItem={deleteItem} editItem={editItem} />\r\n        )\r\n      })}\r\n      <StyledButton onClick={addEmptyItem} >+ Add item</StyledButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormPage;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  display: block;\r\n  background-color: #f8f9fa;\r\n  color: black;\r\n  padding: 10px 20px;\r\n  min-width: 200px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n  transition: 0.2s;\r\n  \r\n  &:hover {\r\n    background-color: rgba(0,123,255,0.2);\r\n  }\r\n  \r\n  &.active {\r\n   background-color: dodgerblue;\r\n   color: white;\r\n  }\r\n`;\r\n\r\nconst SideMenu = () => {\r\n  return (\r\n    <nav>\r\n      <StyledNavLink exact to=\"/\">Form</StyledNavLink>\r\n      <StyledNavLink exact to=\"/chart\">Chart</StyledNavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default SideMenu;\r\n","import React, {useState} from 'react';\nimport styled, {createGlobalStyle} from 'styled-components';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport ChartPage from './components/pages/ChartPage';\nimport FormPage from './components/pages/FormPage';\nimport SideMenu from './components/SideMenu';\nimport getRandomColor from './utils/getRandomColor';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Montserrat|Roboto');\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font-family: Roboto, sans-serif;\n  }\n`;\n\nconst Layout = styled.div`\n  display: flex;\n`;\nconst Content = styled.div`\n  width: 100%;\n  padding: 20px 20px;\n`;\n\n// sample data\nlet cItems = [];\nfor (let i = 0; i < 3; i++) {\n  cItems.push({id: i, qt: (Math.random()*5).toFixed(2), title: i+1+\" Item\", color: getRandomColor()})\n}\n\nfunction App() {\n  const [items, setItems] = useState(cItems);\n\n  return (\n    <Router basename='/'>\n      <GlobalStyle/>\n      <Layout>\n        <SideMenu/>\n        <Content>\n          <Switch>\n            <Route exact path=\"/chart\">\n              <ChartPage items={items} />\n            </Route>\n            <Route exact path=\"/\">\n              <FormPage items={items} setItems={setItems} />\n            </Route>\n          </Switch>\n        </Content>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}